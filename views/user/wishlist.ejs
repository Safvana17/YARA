<%- include("../../views/partials/user/navbar") %>
<style>
    .variant-btn {
  border: 2px solid #ccc;
  border-radius: 50px;
  padding: 10px 20px;
  background-color: white;
  cursor: pointer;
  min-width: 70px;
  text-align: center;
  font-weight: 500;
  transition: 0.2s ease;
}

.variant-btn:hover {
  border-color: #ff2e63;
}

.variant-btn.active {
  background-color: #ff2e63;
  color: white;
  border-color: #ff2e63;
}

</style>
<div class="container my-5 min-vh-100">

  <% if (products.length === 0) { %>
    <div class="text-center mt-5">
      <h2><strong>Your wishlist is empty</strong><br></h2>
      <p>Add items that you like to your wishlist. <br>Review them anytime and easily move them to the cart</p>
      <img src="/images/wishlist.png" alt="empty-wish-list" style="width: 150px; height: 100%;" ><br>
      <a href="/shop" class="btn btn-outline-primary btn-lg mt-3">Browse Products</a>
    </div>
  <% } else { %>
    <div class="row row-cols-1 row-cols-md-4 g-4">
      <% products.forEach(item => { %>
        <div class="col">
          <div class="card h-100 shadow-sm rounded-4">
            <img src="<%= item.productImage[0] %>" class="card-img-top p-3" alt="Product Image" style="height: 230px; object-fit: contain; border-radius: 20px;">
            <div class="card-body d-flex flex-column">
              <h5 class="card-title text-center"><%= item.name %></h5>
              <p class="card-text text-center">₹<%= item.salePrice || item.regularPrice %></p>

                <div class="mt-auto d-flex justify-content-between">
                
                  
                  <button type="button" class="btn btn-success btn-sm"
                        onclick='openModal(
                            <%- JSON.stringify(item._id) %>,
                            <%- JSON.stringify(item.variants || []) %>,
                            <%- JSON.stringify(item.name) %>,
                            <%- JSON.stringify(item.salePrice) %>,
                            <%- JSON.stringify(item.regularPrice) %>,
                            <%- JSON.stringify(item.productImage[0]) %>
                        )'>
                        Add to Cart
                        </button>
                 <!-- remove item -->
                  <button type="submit" onclick="removeitem('<%= item._id%>')" class="btn btn-outline-danger btn-sm">Remove</button>
              </div>
            </div>
          </div>
        </div>
      <% }) %>
    </div>
  <% } %>
</div>

<!-- select size modal -->
 <div class="modal fade" tabindex="-1" id="variantModal" aria-labelledby="variantModalLabel">
  <div class="modal-dialog modal-dialog-centered">
    <div class="modal-content p-3 rounded-4">
      <div class="d-flex justify-content-between align-items-start px-3 pt-3">
        <div class="d-flex">
          <img src="" alt="product image" id="modalProductImage" style="width: 70px; height: 100px; object-fit: cover; border-radius: 8px;" >
          <div class="ms-3">
            <h6 class="mb-1 fw-bold" id="modalProductName"></h6>
            <div>
                <span id="modalSalePrice" class="fw-semibold text-dark"></span>
                <span id="modalRegularPrice" class="text-decoration-line-through text-muted ms-1 small" ></span>
                <span id="modalOffer" class="text-danger fw-semibold ms-2 small"></span>
            </div>
           </div>
        </div>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>

      </div>

      <hr class="my-2" />

      <div class="px-3">
        <p class="fw-semibold"> Select Size</p>
        <div class="d-flex flex-wrap gap-2" id="variantOptions"></div>
      </div>
      <div class="px-3 pb-3">
        <button id="confirmAddToCart" type="button" class="btn w-100 fw-bold text-white" style="background-color: #ff2e63;" >Done</button>
      </div>
    </div>
  </div>
</div>

<%- include("../../views/partials/user/footer") %>
  <!-- Bootstrap Bundle JS (includes Popper) -->
   <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.7.0/jquery.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

<script>
    async function removeitem(productId) {
        try {
            const response = await fetch(`/wishlist/remove/${productId}`, {
                method: 'DELETE',
                headers: {
                    'content-type': 'application/json'
                },
            })

            const result = await response.json()
            if(response.ok){
                Swal.fire({
                    icon: 'success',
                    title: 'Removed',
                    text: 'Product removed from the wishlist',
                    timer: 1200,
                    showConfirmButton: false
                })
                .then(()=>{
                    window.location.reload()
                })
            }else{
                Swal.fire({
                    icon: 'warning',
                    title: 'Oops!',
                    text: result.message || 'Something went wrong',
                    timer: 1200,
                    showConfirmButton: false
                })
            }
        } catch (error) {
            console.error('Error while removing item fromwishlist', error)
            Swal.fire({
                icon:'error',
                title: 'Error',
                text: error.message || 'Internal server error'
            })
        }
    }
</script>
<script>
  let selectedVariantId = null;
let selectedProductId = null;

function openModal(productId, variants, name, salePrice, regularPrice, productImage) {
  
  selectedProductId = productId;
  selectedVariantId = null;

  // Set static product info (assuming available in card)
  document.getElementById('modalProductImage').src = productImage;
  document.getElementById('modalProductName').textContent = name;
  document.getElementById('modalSalePrice').textContent = `₹${salePrice}`;
  document.getElementById('modalRegularPrice').textContent = regularPrice > salePrice ? `₹${regularPrice}` : '';
  document.getElementById('modalOffer').textContent = regularPrice > salePrice
    ? `${Math.round(((regularPrice - salePrice) / regularPrice) * 100)}% OFF`
    : '';

  // Generate size buttons
  const variantContainer = document.getElementById('variantOptions');
  variantContainer.innerHTML = '';

  variants.forEach(variant => {
    const btn = document.createElement('div');
    btn.className = 'variant-btn';
    btn.innerHTML = `<div>${variant.size}</div><small>Rs.${variant.salePrice}</small>`;
    btn.dataset.variantId = variant._id;

    btn.onclick = () => {
      document.querySelectorAll('.variant-btn').forEach(b => b.classList.remove('active'));
      btn.classList.add('active');
      selectedVariantId = variant._id;
    };

    variantContainer.appendChild(btn);
  });

  const modalElement = document.getElementById('variantModal');
  const modalInstance = bootstrap.Modal.getOrCreateInstance(modalElement);
  modalInstance.show();

}

// Handle "Done" button click
document.getElementById('confirmAddToCart').addEventListener('click', async () => {
  if (!selectedVariantId) {
    return Swal.fire({ icon: 'warning', title: 'Please select a size' });
  }

  try {
    const response = await fetch('/wishlistAddToCart', {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify({ productId: selectedProductId, variantId: selectedVariantId })
    });

    const result = await response.json();
    if (result.success) {
      Swal.fire({ icon: 'success', title: 'Added to Cart', timer: 1200, showConfirmButton: false }).then(()=>{
        location.reload()
      })
      const modalElement = document.getElementById('variantModal');
      const modalInstance = bootstrap.Modal.getInstance(modalElement);

        setTimeout(() => {
         document.activeElement.blur();
         modalInstance.hide();
        }, 10)

    } else {
      Swal.fire({ icon: 'error', title: 'Oops!', text: result.message });
    }
  } catch (error) {
    console.error('Cart error:', error);
    Swal.fire({ icon: 'error', title: 'Error', text: error.message || 'Internal server error' });
  }
});


</script>